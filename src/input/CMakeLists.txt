IF(WIN32)
	IF(DYNAMIC_LINKING)
		ADD_DEFINITIONS(-DCVRINPUT_LIBRARY)
	ELSE(DYNAMIC_LINKING)
		ADD_DEFINITIONS(-DCVRINPUT_LIBRARY_STATIC)
	ENDIF(DYNAMIC_LINKING)
ENDIF(WIN32)

SET(LIB_NAME input)
SET(HEADER_PATH ${CalVR_SOURCE_DIR}/include/${LIB_NAME})
SET(LIB_PUBLIC_HEADERS
    ${HEADER_PATH}/TrackingManager.h
    ${HEADER_PATH}/TrackerBase.h
    ${HEADER_PATH}/TrackerShmem.h
    ${HEADER_PATH}/TrackerSlave.h
    ${HEADER_PATH}/TrackerMouse.h
    ${HEADER_PATH}/Export.h
)

SET(EXTRA_SOURCE)

IF(VRPN_FOUND)
   SET(LIB_PUBLIC_HEADERS ${LIB_PUBLIC_HEADERS} ${HEADER_PATH}/TrackerVRPN.h)
   SET(EXTRA_SOURCE ${EXTRA_SOURCE} TrackerVRPN.cpp)
ENDIF(VRPN_FOUND)

SET(LIB_SRC_FILES
    ${EXTRA_SOURCE}
    TrackingManager.cpp
    TrackerBase.cpp
    TrackerShmem.cpp
    TrackerSlave.cpp
    TrackerMouse.cpp
)

SET(LIB_EXTERNAL_INCLUDES
    ${OSG_INCLUDE_DIR}
)

SET(LIB_EXTERNAL_LIBRARIES
    ${OSG_LIBRARIES}
)

SET(LIB_INTERNAL_LIBRARIES
    config
    util
	kernel
)


IF(VRPN_FOUND)
    ADD_DEFINITIONS(-DWITH_VRPN)
    SET(LIB_EXTERNAL_INCLUDES ${LIB_EXTERNAL_INCLUDES} ${VRPN_INCLUDE_DIR})
    SET(LIB_EXTERNAL_LIBRARIES ${LIB_EXTERNAL_LIBRARIES} ${VRPN_LIBRARY})
ENDIF(VRPN_FOUND)

SETUP_CORE_LIBRARY(${LIB_NAME})
